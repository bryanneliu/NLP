# 
# Falex Rule Summary:
# 1. Left most longest match
# "age num to num years" will be matched before "num to num months"
# 2. In function, <> means the part to be extracted and labeled with the tag
#    Parts before and after <> means context
# 3. Adding new rules can override the previous matching, adding unit tests to guard the quality#

# For age_gender segment, to keep simple:
# 1. Match "gender", "audience" and "age" separately
# 2. Age transformation is not supported, for example "1 year" = "12 months"
# 3. For "baby ... 1 year old", "toddler 3 years", keep "baby" and "toddler" and required match
# 4. Do not match "query without age range" and "query with age range"
#    For example: "baby toy" and "baby toy 3 months old"
# 5. For query and tc with age range, as long as the range has overlap, they are matched
# 
# We can support more intelligent match, like "baby girl toy" = "toy for 1 year old girl"
#

# Baby: 0-1
# Toddler: 1-3
# Preschooler: 3-5
# School Age Child: 6-12
# Preteen: 9-12
# Teen: 12-19

_define ToTok (WHITESPACE to WHITESPACE)
_define AgeTok ((aged)|(ages)|(age))
_define YearTok ((years)|(year)|(yr))
_define MonthTok ((months)|(month)|(mons)|(mon))
_define OldTok ((olds)|(old))

_define AgeYearNum (1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16)
_define AgeMonthNum (0|1|3|6|9|12|18|24|36)
_define AgeYearRange (AgeYearNum (ToTok|SEP) AgeYearNum)
_define AgeMonthRange (AgeMonthNum (ToTok|SEP) AgeMonthNum)
_define AgeYearDesc (YearTok (SEP)? (OldTok)?)
_define AgeMonthDesc (MonthTok (SEP)? (OldTok)?)
_define AgeYear (AgeYearNum (SEP)? (AgeYearDesc)?)
_define AgeMonth (AgeMonthNum (SEP)? AgeMonthDesc)

_define BabyTok ((newborn WHITESPACE babies)|(newborn WHITESPACE baby)|(new WHITESPACE born)|(newborns)|(newborn)|(infants)|(infant)|(babies)|(baby)|(bebes)|(bebe))
_define ToddlerTok ((toddlers)|(toddler))
_define KidTok ((kids)|(kid)|(children's)|(childrens)|(children)|(child))
_define TeenTok ((teenagers)|(teenager)|(teenage)|(teens)|(teen))

_define BoyTok ((boys)|(boy))
_define GirlTok ((girls)|(girl))


#
# Pattern: Month Age Range
# Example queries: 3-6 months, 6 to 12 months
# To support "Year Age Range" pattern, we add "AgeTok" everywhere because left longest match
# "< SEP > --> IGNORE" is not required because it's stop word
#
_function FnAgeMonthRange
  < AgeMonthNum > (ToTok|SEP) --> AGE_MONTH_START
  < ToTok|SEP > --> IGNORE
  (ToTok|SEP) < AgeMonthNum > --> AGE_MONTH_END
_end

< (AgeTok)? (SEP)? AgeMonthRange (SEP)? AgeMonthDesc > --> _call FnBabyAgeMonthRange
< (BabyTok|GirlTok|BoyTok) SEP? AgeTok? SEP? AgeMonthRange SEP? AgeMonthDesc > --> _call FnBabyAgeMonthRange 

_function FnBabyAgeMonthRange
  < GirlTok > --> GENDER_GIRL
  < BoyTok > --> GENDER_BOY
  < BabyTok > --> AUDIENCE_BABY
  < AgeTok > --> IGNORE
  < AgeMonthRange > --> _call FnAgeMonthRange
  < AgeMonthDesc > --> IGNORE
_end


#
# Pattern: A specific Month Age
# Example queries: 6 month old baby, 12 month
#
< AgeMonthNum SEP AgeMonthDesc > --> _call FnKidAgeMonth

_function FnKidAgeMonth
  < AgeMonthNum > --> AGE_MONTH
  < AgeMonthDesc > --> IGNORE
_end


#
# Pattern: Year Age Range
# Example queries: girls 3-5, girls age 4-7, boys ... 6-8 years old
# <> The part is to be extracted and labeled
# The same <> part lists once, for example < SEP > --> IGNORE
# (context <>) or (<> context), use context to resolve ambiguity
# 
_function FnAgeYearRange
  < AgeYearNum > (ToTok|SEP) --> AGE_YEAR_START
  < ToTok|SEP > --> IGNORE
  (ToTok|SEP) < AgeYearNum > --> AGE_YEAR_END
_end

# For query "3-5" means "3-5 years old", so AgeYearDesc is optional, MonthYearDesc is required
< AgeTok? (SEP)? AgeYearRange (SEP)? AgeYearDesc > --> _call FnKidAgeYearRange
< AgeTok (SEP)? AgeYearRange (SEP)? AgeYearDesc? > --> _call FnKidAgeYearRange
< (KidTok|ToddlerTok|TeenTok|GirlTok|BoyTok) SEP? AgeTok? SEP? AgeYearRange SEP? AgeYearDesc? > --> _call FnKidAgeYearRange 
_function FnKidAgeYearRange
  < GirlTok > --> GENDER_GIRL
  < BoyTok > --> GENDER_BOY
  < KidTok > --> AUDIENCE_KID
  < ToddlerTok > --> AUDIENCE_TODDLER
  < BabyTok > --> AUDIENCE_BABY
  < TeenTok > --> AUDIENCE_TEEN
  < AgeTok > --> IGNORE
  < AgeYearRange> --> _call FnAgeYearRange
  < AgeYearDesc > --> IGNORE
_end


#
# Pattern: with Year Age Start
# 3+ year old girls, 1 + year old
#
< AgeYearNum (SEP)? [+] (SEP)? AgeYearDesc > --> _call FnKidAgeYearStart
_function FnKidAgeYearStart
  < AgeYearNum > --> AGE_YEAR_START
  < SEP > --> IGNORE
  < [+] > --> IGNORE
  < AgeYearDesc > --> IGNORE
_end


#
# Pattern: A specific Year Age
# 3 year old, 3 year old girl, girls age 7
#
< AgeYearNum SEP AgeYearDesc > --> _call FnKidAgeYear
< AgeTok SEP AgeYearNum > --> _call FnKidAgeYear

_function FnKidAgeYear
  < AgeYearNum > --> AGE_YEAR
  < SEP > --> IGNORE
  < AgeYearDesc > --> IGNORE
  < AgeTok > --> IGNORE
_end


#
# Separate matching rules for different part/component (gender, audience, age)
# Pattern: extract gender - girl, boy
# Example queries: boys ... 6-8 years old
#
< GirlTok|BoyTok > --> _call FnKidGender
_function FnKidGender
  < GirlTok > --> GENDER_GIRL
  < BoyTok > --> GENDER_BOY
_end


#
# Pattern: extract audience - kid, teen, toddler, baby
#
< KidTok|ToddlerTok|BabyTok|TeenTok > --> _call FnKidDesc
_function FnKidDesc
  < KidTok > --> AUDIENCE_KID
  < ToddlerTok > --> AUDIENCE_TODDLER
  < BabyTok > --> AUDIENCE_BABY
  < TeenTok > --> AUDIENCE_TEEN
_end	
